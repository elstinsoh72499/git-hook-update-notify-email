#!/usr/bin/env ruby


$:.unshift File.dirname(__FILE__) + '/../lib'
require 'git-hook-update-notify-email'
require 'trollop'

include GitHookUpdateNotifyEmail


opts = Trollop::options do
  version "git-hook-update-notify-email #{GitHookUpdateNotifyEmail::VERSION::STRING}"
  opt :config, "ActionMailer config file", :type => String
  opt :style, "A yaml file with all CSS styles", :type => String
  opt :to, "the recipients to send mail notifications to", :type => String
  opt :from, "mail notifitions sende", :type => String
end

refname = ARGV.shift
old_sha1 = ARGV.shift
new_sha1 = ARGV.shift

unless opts[:config].nil?
  mailconfig = YAML::load_file(opts[:config])
  mailconfig.each do |k, v|
    v.symbolize_keys! if v.respond_to?(:symbolize_keys!)
    ActionMailer::Base.send("#{k}=", v)
  end
else
  ActionMailer::Base.delivery_method = :sendmail
end

Trollop::die :to, 'you need to define recipients to send notifications' if opts[:to].nil?

git_rev = GitRevision.get_all_revision(refname, old_sha1, new_sha1, opts[:style])
git_rev.each do |rev|
  GitDiffMail.deliver_git_diff_mail(rev, opts[:to], opts[:from])
end

#!vim: syntax
